openapi: 3.0.3
info:
  title: Express Example
  version: 1.0.0
servers:
  - url: http://localhost:${PORT}
tags:
  - name: Unauthorized
    description: 로그인 전
  - name: Authorized
    description: 로그인 후
paths:
  /api/v1/users:
    post:
      tags:
        - Unauthorized
      summary: 사용자 생성
      requestBody:
        description: 가입 정보
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - userId
                - password
              properties:
                userId:
                  type: string
                  example: testuser
                  description: 사용자 아이디
                password:
                  type: string
                  example: 'qwe123!@#'
                  description: 사용자 비밀번호
                userName:
                  type: string
                  example: test
                  description: 사용자 이름
                profileImg:
                  type: string
                  description: 사용자 프로필 이미지 (최대 5MB)
                  format: binary
        required: true
      responses:
        '200':
          description: 사용자 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        '409':
          description: 중복 아이디 존재
        '500':
          description: 서버 에러
  /api/v1/users/{uuid}:
    get:
      tags:
        - Unauthorized
      summary: 사용자 조회
      parameters:
        - name: uuid
          in: path
          description: 사용자 UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 사용자 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        '404':
          description: 사용자 조회 불가
        '500':
          description: 서버 에러
  /api/v1/users/profileimg/{uuid}:
    get:
      tags:
        - Unauthorized
      summary: 사용자 프로필 이미지 조회
      parameters:
        - name: uuid
          in: path
          description: 사용자 UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 사용자 프로필 이미지 조회 성공
          content:
            image/png:
              schema:
                type: string
                format: binary
                example: 사용자 프로필 이미지
        '404':
          description: 사용자 프로필 이미지 조회 불가
        '500':
          description: 서버 에러
  /api/v1/login:
    post:
      tags:
        - Unauthorized
      summary: 로그인
      requestBody:
        description: 로그인 정보
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - password
              properties:
                userId:
                  type: string
                  example: testuser
                  description: 사용자 아이디
                password:
                  type: string
                  example: 'qwe123!@#'
                  description: 사용자 비밀번호
        required: true
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  userInfo:
                    $ref: '#/components/schemas/UserInfo'
                  tokens:
                    $ref: '#/components/schemas/Tokens'
        '401':
          description: 로그인 실패
        '500':
          description: 서버 에러
  /api/v1/auth/users:
    put:
      tags:
        - Authorized
      summary: 본인 사용자 정보 수정
      description: profileImg 필드의 값이 빈 문자열일 시 기존 프로필 이미지 삭제
      requestBody:
        description: 새 사용자 정보
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - password
              properties:
                password:
                  type: string
                  example: 'qwe123!@#'
                  description: 기존 비밀번호
                newPassword:
                  type: string
                  example: 'asd456$%^'
                  description: 새 비밀번호
                userName:
                  type: string
                  example: test2
                  description: 새 사용자 이름
                profileImg:
                  type: string
                  description: 새 사용자 프로필 이미지 (최대 5MB)
                  format: binary
        required: true
      responses:
        '200':
          description: 사용자 정보 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        '401':
          description: 인증 실패
        '403':
          description: 기존 비밀번호 불일치
        '500':
          description: 서버 에러
      security:
        - bearerAuth: []
    delete:
      tags:
        - Authorized
      summary: 사용자 정보 삭제
      responses:
        '200':
          description: 사용자 정보 삭제 성공
          content:
            application/json:
              schema:
                type: object
                description: 사용자 정보
                properties:
                  userId:
                    type: string
                    example: testuser
                    description: 사용자 아이디
                  userName:
                    type: string
                    example: test
                    description: 사용자 이름
                  createDate:
                    type: string
                    example: '2023-02-11T02:59:57.325Z'
                    description: 가입 날짜
                  updateDate:
                    type: string
                    example: '2023-02-11T03:03:30.986Z'
                    description: 가입 날짜
        '400':
          description: 요청 에러
        '401':
          description: 인증 실패
        '500':
          description: 서버 에러
      security:
        - bearerAuth: []
  /api/v1/auth/token:
    get:
      tags:
        - Authorized
      summary: Access 토큰 갱신
      description: Authorization 헤더에 Refresh 토큰 필요
      responses:
        '200':
          description: Access 토큰 갱신 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  userInfo:
                    $ref: '#/components/schemas/UserInfo'
                  tokens:
                    $ref: '#/components/schemas/Tokens'
        '401':
          description: 유효하지 않은 Refresh 토큰
        '500':
          description: 서버 에러
      security:
        - bearerAuth: []
components:
  schemas:
    UserInfo:
      type: object
      description: 사용자 정보
      required:
        - uuid
        - userId
        - createDate
      properties:
        uuid:
          type: string
          example: 8d30daf1-e176-44a9-8312-6f09588a24f2
          description: 사용자 UUID
        userId:
          type: string
          example: testuser
          description: 사용자 아이디
        userName:
          type: string
          example: test
          description: 사용자 이름
        profileImg:
          type: string
          example: /api/v1/users/profileimg/8d30daf1e17644a983126f09588a24f2
          description: 사용자 프로필 이미지 URL
        createDate:
          type: string
          example: '2023-02-11T02:59:57.325Z'
          description: 가입 날짜
        updateDate:
          type: string
          example: '2023-02-11T03:03:30.986Z'
          description: 수정 날짜
    Tokens:
      type: object
      description: Access/Refresh 토큰 정보
      required:
        - accessToken
        - refreshToken
      properties:
        accessToken:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzVG9rZW4iLCJ1c2VySW5mbyI6eyJ1dWlkIjoiOGQzMGRhZjEtZTE3Ni00NGE5LTgzMTItNmYwOTU4OGEyNGYyIiwidXNlcklkIjoidGVzdHVzZXIiLCJ1c2VyTmFtZSI6InRlc3QiLCJwcm9maWxlSW1nIjoiL2FwaS92MS91c2Vycy9wcm9maWxlaW1nLzhkMzBkYWYxZTE3NjQ0YTk4MzEyNmYwOTU4OGEyNGYyIiwiY3JlYXRlRGF0ZSI6IjIwMjMtMDItMTFUMDI6NTk6NTcuMzI1WiIsInVwZGF0ZURhdGUiOiIyMDIzLTAyLTExVDAzOjAzOjMwLjk4NloifSwiaWF0IjoxNjc2MDg1MTY4LCJleHAiOjE2NzYwODg3Njh9._h6nO7qptpjPGBCHh-omw8XB6u24RtS6PvY_e4BC8bo
          description: Access 토큰
        refreshToken:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoicmVmcmVzaFRva2VuIiwidXNlckluZm8iOnsidXVpZCI6IjhkMzBkYWYxLWUxNzYtNDRhOS04MzEyLTZmMDk1ODhhMjRmMiIsInVzZXJJZCI6InRlc3R1c2VyIiwidXNlck5hbWUiOiJ0ZXN0IiwicHJvZmlsZUltZyI6Ii9hcGkvdjEvdXNlcnMvcHJvZmlsZWltZy84ZDMwZGFmMWUxNzY0NGE5ODMxMjZmMDk1ODhhMjRmMiIsImNyZWF0ZURhdGUiOiIyMDIzLTAyLTExVDAyOjU5OjU3LjMyNVoiLCJ1cGRhdGVEYXRlIjoiMjAyMy0wMi0xMVQwMzowMzozMC45ODZaIn0sImlhdCI6MTY3NjA4NTE2OCwiZXhwIjoxNjc2MzQ0MzY4fQ.lH_IOXcpTNPIKBSQU5e1XN_VNQDk09Qs3Pk4Wd6Zwnc
          description: Refresh 토큰
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
